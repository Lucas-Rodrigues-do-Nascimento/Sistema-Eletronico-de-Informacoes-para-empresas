import { htmlMemorandoTemplate } from './documentos/memorando';
import { htmlDespachoTemplate } from './documentos/despacho';
import { 
  htmlRequisicaoTemplate, 
  htmlOrdemTemplate,
  htmlJustificativaTemplate,
  htmlPagamentoTemplate
} from './documentos/simples';

// Estrutura dos templates
export interface TemplateDocumento {
  modelo: string;    // Identificador √∫nico do modelo (usado internamente)
  label: string;     // Nome exibido na interface do usu√°rio (com emoji)
  html: string;      // Conte√∫do HTML do template
  descricao?: string; // Descri√ß√£o opcional do modelo
}

// Cat√°logo completo de templates
export const templatesDocumentos: TemplateDocumento[] = [
  { 
    modelo: 'memorando', 
    label: 'üìÑ Memorando',
    html: htmlMemorandoTemplate,
    descricao: 'Comunica√ß√£o interna formal entre setores ou colaboradores'
  },
  { 
    modelo: 'despacho', 
    label: 'üìå Despacho',
    html: htmlDespachoTemplate,
    descricao: 'Documento para aprova√ß√£o, encaminhamento ou decis√£o sobre processos'
  },
  { 
    modelo: 'requisicao', 
    label: 'üõí Requisi√ß√£o',
    html: htmlRequisicaoTemplate,
    descricao: 'Solicita√ß√£o de materiais ou servi√ßos'
  },
  { 
    modelo: 'ordem', 
    label: 'üßæ Ordem',
    html: htmlOrdemTemplate,
    descricao: 'Ordem de servi√ßo ou execu√ß√£o de tarefa'
  },
  { 
    modelo: 'justificativa', 
    label: 'üìë Justificativa',
    html: htmlJustificativaTemplate,
    descricao: 'Documento que apresenta raz√µes para determinada decis√£o ou pedido'
  },
  { 
    modelo: 'pagamento', 
    label: 'üí∞ Pagamento',
    html: htmlPagamentoTemplate,
    descricao: 'Solicita√ß√£o de pagamento a fornecedores ou prestadores'
  }
];

// Fun√ß√£o auxiliar para obter um template espec√≠fico por ID
export function getTemplateById(modeloId: string): TemplateDocumento | undefined {
  return templatesDocumentos.find(t => t.modelo === modeloId);
}

// Fun√ß√µes auxiliares espec√≠ficas para tipos de documentos
export function getTemplateHtml(modeloId: string): string {
  const template = getTemplateById(modeloId);
  if (!template) {
    console.warn(`Template n√£o encontrado: ${modeloId}. Usando template padr√£o.`);
    return '<p>Digite o conte√∫do aqui...</p>';
  }
  return template.html;
}

// Exporta tamb√©m os templates individuais para uso direto se necess√°rio
export {
  htmlMemorandoTemplate,
  htmlDespachoTemplate,
  htmlRequisicaoTemplate,
  htmlOrdemTemplate,
  htmlJustificativaTemplate,
  htmlPagamentoTemplate
}; 